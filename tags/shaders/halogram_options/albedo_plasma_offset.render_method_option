                                          ÿÿÿÿpomr   ñ@ ®MALB!gat      yalb   M
  ÿÿÿÿV.-íÖ2K®gÍßãµ‚      =   N                                     ylgt   õ
  *rts    =   parameters block parameter name string id parameter type long enum bitmap color real int bool argb color render_method_parameter_type_enum source extern none texaccum target normal target z target shadow 1 target shadow 2 target shadow 3 target shadow 4 target texture camera target reflection target refraction target lightprobe texture dominant light intensity texture unused 1 unused 2 change color primary change color secondary change color tertiary change color quaternary change color quinary emblem color background emblem color primary emblem color secondary dynamic environment map 1 dynamic environment map 2 cook torrance cc0236 cook torrance dd0236 cook torrance c78d78 light dir 0 light color 0 light dir 1 light color 1 light dir 2 light color 2 light dir 3 light color 3 unused 3 unused 4 unused 5 dynamic light gel 0 flat envmap matrix x flat envmap matrix y flat envmap matrix z debug tint screen constants active camo distortion texture scene ldr texture scene hdr texture water memexport addr tree animation timer render_method_extern_enum default bitmap tag reference default real value default int/bool value long integer flags short integer default filter mode short enum trilinear point bilinear anisotropic (1) anisotropic (2) expensive anisotropic (3) Expensive anisotropic (4) EXPENSIVE lightprobe texture array comparison point comparison bilinear render_method_bitmap_filter_mode_enum default comparison function never less equal less equal greater not equal greater equal always render_method_bitmap_comparison_function_enum default address mode wrap clamp mirror black border render_method_bitmap_address_mode_enum anisotropy amount padding pad default color default bitmap scale help text data code_block terminator X render_method_option_parameter_block render_method_option_struct_definition render_method_option_block x+zs    8  C   J   P   U   Y   ^   ™   ž   ®   ¼   Å   Õ   å   õ       -  ?  R  s  |  …  š  ±  Ç  ß  ô    !  8  R  l    –  «  ·  Å  Ñ  ß  ë  ù        %  .  B  W  l    Œ    ¼  Î  à  õ  «  µ  »  Ä  Ô  î    "  ;  L  ¢  ¨  ­  ³  ¾  Æ  Ð  Þ  (  -  3  :  ][zs    <   i          
  2      `  
   8   å     B   G     J   nbsc        mntd       ¾  !rra        tfgt       
                   9          3        P          k         ~                   ˆ          ^          ¹        É          sarg    Ø             *          ‹         $         A         T         x         Œ         †                  n         €        Œ  	       š         ¯  
       
   
                   
   
       2vlb       Ö  @      "          2vcr        [==]        2vts    0   ~:‡dâLF1 1Z»L¸Ý¼û     Âh»’Ojuöª-¼.³ïÖ      tadb   ¹
  lbgt    ­
         
           tsgt
  
  lbgt    
  
                   mtib    /   ÿÿÿÿ                            9       ÿÿÿÿ                    mtib    /   ÿÿÿÿ                            5       ÿÿÿÿ                    mtib    .   ÿÿÿÿ                            T       ÿÿÿÿ                    mtib    /   ÿÿÿÿ                            T       ÿÿÿÿ                   ÿÿÿÿ        ÿÿÿÿ                    ÿÿÿ     1       ÿÿÿÿ                   ÿÿÿÿ        ÿÿÿÿ                      ÿ     Œ      ÿÿÿÿ                   ÿÿÿÿ        ÿÿÿÿ  €?                               ÿÿÿÿ                   ÿÿÿÿ        ÿÿÿÿ  €?                        m       ÿÿÿÿ                   ÿÿÿÿ        ÿÿÿÿ  €?                ÿÿÿÿ           ÿÿÿÿ                   ÿÿÿÿ        ÿÿÿÿ  €?                               ÿÿÿÿ        tsgtŸ   Ÿ   isgt       plasma_mask_mapfrgt    3   mtibshaders\default_bitmaps\bitmaps\gray_50_percentadgt    9   [Bitmap] RGB is the color mask. Alpha is the invert mask tsgt      isgt       plasma_offset_mapfrgt    3   mtibshaders\default_bitmaps\bitmaps\gray_50_percentadgt    5   [Bitmap] Offset map. Only the alpha channel is used. tsgt¼   ¼   isgt       plasma_noise_map_afrgt    2   mtibobjects\characters\jackal\bitmaps\shield_noiseadgt    T   [Bitmap] Self explanatory. Used in conjunction with the offset map for the tendrils tsgt½   ½   isgt       plasma_noise_map_bfrgt    3   mtibobjects\characters\jackal\bitmaps\shield_noise2adgt    T   [Bitmap] Self explanatory. Used in conjunction with the offset map for the tendrils tsgt`   `   isgt    
   plasma_tintfrgt        adgt    1   RGB is plasma color. Alpha is used for blending. tsgt´  ´  isgt       glowfrgt        adgt    Œ  [Color] Self explanatory. Here's how plasma_color and plasma_flash_color blend between each other.

1. As previously discussed the plasma_color's RGB color is multiplited to it's inverrted alphamask (1 - plasma_color.a)
2. The flash color multiplies its rgb to the plasma color's alpha (plasma_flash)
3. The final color will be plasma_tint +  plasma_flash

If say, plasma_color's RGBA channels look like this (1,1,1,1) then the following will happen.
1. Since plasma_color's RGB is multiplied to its inverted alpha, then it will true black RGB(0 0 0);
2. plasma_flash_color (let's say red) will be the final color because black + red is red.
 tsgt8   8   isgt       plasma_illuminationfrgt        adgt        tsgt¢   ¢   isgt       plasma_brightnessfrgt        adgt    m   Used exclusively alongside the function "illum_transparent", which is
specifically designed for this option tsgt3   3   isgt       plasma_factor1frgt        adgt        tsgt3   3   isgt       plasma_factor2frgt        adgt        
